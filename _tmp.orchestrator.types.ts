/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/mfe-remotes/auth-test": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["MfeRemoteController_authTest"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mfe-remotes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["MfeRemoteController_findAll"];
        put?: never;
        post: operations["MfeRemoteController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mfe-remotes/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["MfeRemoteController_findOne"];
        put?: never;
        post?: never;
        delete: operations["MfeRemoteController_remove"];
        options?: never;
        head?: never;
        patch: operations["MfeRemoteController_update"];
        trace?: never;
    };
    "/mfe-remotes/name/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["MfeRemoteController_findByName"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mfe-remotes/{id}/archive": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["MfeRemoteController_archive"];
        trace?: never;
    };
    "/mfe-remotes/{id}/unarchive": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["MfeRemoteController_unarchive"];
        trace?: never;
    };
    "/mfe-remotes/{id}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["MfeRemoteController_updateStatus"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AuthTestDto: {
            message: string;
        };
        /** @enum {string} */
        MfeRemoteType: "structural" | "user-journey";
        StructuralOverridesDto: {
            /** @enum {string} */
            header?: "full" | "relaxed" | "compact" | "disabled";
            /** @enum {string} */
            nav?: "verbose" | "minimal" | "disabled";
            /** @enum {string} */
            footer?: "full" | "relaxed" | "compact" | "disabled";
        };
        /** @enum {string} */
        StructuralOverrideMode: "full" | "relaxed" | "compact" | "disabled";
        /** @enum {string} */
        StructuralNavOverrideMode: "verbose" | "minimal" | "disabled";
        /** @enum {string} */
        StructuralSubType: "header" | "nav" | "footer";
        CreateMfeRemoteDto: {
            name: string;
            /** Format: uri */
            remoteEntryUrl: string;
            status?: string;
            description?: string;
            archived?: boolean;
            type: components["schemas"]["MfeRemoteType"];
            structuralOverrides?: components["schemas"]["StructuralOverridesDto"];
            structuralOverridesHeader?: components["schemas"]["StructuralOverrideMode"];
            structuralOverridesNav?: components["schemas"]["StructuralNavOverrideMode"];
            structuralOverridesFooter?: components["schemas"]["StructuralOverrideMode"];
            structuralSubType?: components["schemas"]["StructuralSubType"];
        };
        MfeRemoteDto: {
            _id: string;
            name: string;
            /** Format: uri */
            remoteEntryUrl: string;
            /** @enum {string} */
            type: "structural" | "user-journey";
            structuralOverrides?: components["schemas"]["StructuralOverridesDto"];
            /** @enum {string} */
            structuralSubType?: "header" | "nav" | "footer";
            version: number;
            status?: string;
            description: string;
            /** Format: date-time */
            lastUpdated: string;
            archived: boolean;
        };
        UpdateMfeRemoteDto: {
            name?: string;
            /** Format: uri */
            remoteEntryUrl?: string;
            status?: string;
            description?: string;
            archived?: boolean;
            type?: components["schemas"]["MfeRemoteType"];
            structuralOverrides?: components["schemas"]["StructuralOverridesDto"];
            structuralOverridesHeader?: components["schemas"]["StructuralOverrideMode"];
            structuralOverridesNav?: components["schemas"]["StructuralNavOverrideMode"];
            structuralOverridesFooter?: components["schemas"]["StructuralOverrideMode"];
            structuralSubType?: components["schemas"]["StructuralSubType"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    MfeRemoteController_authTest: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuthTestDto"];
                };
            };
        };
    };
    MfeRemoteController_findAll: {
        parameters: {
            query?: {
                /** @description Filter by archived status */
                archived?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MfeRemoteDto"][];
                };
            };
        };
    };
    MfeRemoteController_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateMfeRemoteDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MfeRemoteDto"];
                };
            };
        };
    };
    MfeRemoteController_findOne: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MfeRemoteDto"];
                };
            };
        };
    };
    MfeRemoteController_remove: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    MfeRemoteController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateMfeRemoteDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MfeRemoteDto"];
                };
            };
        };
    };
    MfeRemoteController_findByName: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MfeRemoteDto"];
                };
            };
        };
    };
    MfeRemoteController_archive: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MfeRemoteDto"];
                };
            };
        };
    };
    MfeRemoteController_unarchive: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MfeRemoteDto"];
                };
            };
        };
    };
    MfeRemoteController_updateStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MfeRemoteDto"];
                };
            };
        };
    };
}
